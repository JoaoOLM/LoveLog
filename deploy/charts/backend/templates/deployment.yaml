apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend.fullname" . }}
  labels:
    {{- include "backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.global.backend.replicas | default .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "backend.labels" . | nindent 8 }}
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.36 # Uma imagem leve com ferramentas de rede
          command: ['sh', '-c', 'until nc -z lovelog-postgres 5432; do echo waiting for postgres; sleep 2; done;']
      containers:
        - name: {{ .Values.global.backend.name | default "backend" }}
          image: {{ .Values.global.backend.image | default (printf "%s:%s" .Values.image.repository .Values.image.tag) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.global.backend.port | default .Values.service.port }}
              protocol: TCP
          env:
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_DB
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_PASSWORD

            - name: DB_HOST
              value: {{ .Values.env.DB_HOST }}
            - name: DB_PORT
              value: {{ .Values.env.DB_PORT | quote }}
            - name: DEBUG
              value: {{ .Values.env.DEBUG | quote }}
            - name: ALLOWED_HOSTS
              value: {{ .Values.env.ALLOWED_HOSTS }}
            - name: CORS_ALLOWED_ORIGINS
              value: {{ .Values.env.CORS_ALLOWED_ORIGINS }}
            - name: CORS_ALLOW_ALL_ORIGINS
              value: {{ .Values.env.CORS_ALLOW_ALL_ORIGINS | quote }}
            - name: CSRF_TRUSTED_ORIGINS
              value: {{ .Values.env.CSRF_TRUSTED_ORIGINS }}
            - name: MEDIA_URL 
              value: {{ .Values.env.MEDIA_URL }}

            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: db-secret 
                  key: SECRET_KEY

          volumeMounts:
            - name: static-storage
              mountPath: /app/static
            - name: media-storage
              mountPath: /app/media
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: static-storage
          persistentVolumeClaim:
            claimName: static-pvc
        - name: media-storage
          persistentVolumeClaim:
            claimName: media-pvc
