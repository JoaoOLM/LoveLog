services:
  db:
    image: postgres:15
    env_file: "./backend/.env.db"
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - bd-back

  backend:
    build: ./backend
    depends_on:
      - db
    env_file: "./backend/.env"
    volumes:
      - static_volume:/app/staticfiles 
      - media_volume:/app/media
    command: >
      sh -c "
        uv run python manage.py migrate &&
        uv run python manage.py collectstatic --noinput &&
        uv run gunicorn config.wsgi:application --bind 0.0.0.0:8000
      "
    networks:
      - bd-back
      - back-front

  frontend:
    build: ./frontend
    depends_on:
      - backend
    networks:
      - back-front

  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles  
      - media_volume:/app/media
    ports:
      - "8080:80"
    depends_on:
      - frontend
      - backend
    networks:
      - back-front

volumes:
  db_data:
  static_volume:
  media_volume:

networks:
  bd-back:
  back-front:
